edition = "2023";

package hestia.invoicing.v1;

import "google/protobuf/timestamp.proto";
import "google/type/decimal.proto";
import "google/type/money.proto";
import "hestia/accounting/v1/accounting.proto";
import "hestia/common/v1/common.proto";

option go_package = "hestia/api/gen/invoicing;invoicing";

service InvoicingService {
  rpc NewInvoice(NewInvoiceRequest) returns (NewInvoiceResponse);
  rpc GetInvoices(GetInvoicesRequest) returns (GetInvoicesResponse);
  rpc GetInvoice(GetInvoiceRequest) returns (GetInvoiceResponse);
}

service ClientService {
  rpc GetClient(GetClientRequest) returns (GetClientResponse);
  rpc GetClients(GetClientsRequest) returns (GetClientsResponse);
  rpc SearchClients(SearchClientsRequest) returns (SearchClientsResponse);
}

message Address {
  string street = 1 [features.field_presence = EXPLICIT];
  string postal_code = 2 [features.field_presence = EXPLICIT];
  string locality = 3 [features.field_presence = EXPLICIT];
  string country = 4;
}

enum Units {
  UNITS_UNSPECIFIED = 0;
  UNITS_UNIT = 1;
  UNITS_KG = 2;
  UNITS_L = 3;
  UNITS_M = 4;
  UNITS_M2 = 5;
  UNITS_M3 = 6;
  UNITS_HOUR = 7;
}

message DocumentHeader {
  string id = 1 [features.field_presence = EXPLICIT];
  Client client = 2;
  Address billing_address = 3;
  Address shipping_address = 4 [features.field_presence = EXPLICIT];
  google.protobuf.Timestamp date = 5;
  string hash = 6;
  string series = 7;
  string type = 8;
  int32 number = 9;
  DocumentTotals totals = 10;
}

message DocumentTotals {
  google.type.Money net_total = 1;
  google.type.Money gross_total = 2;
  google.type.Money vat_total = 3;
  google.type.Money tax_total = 4;
}

message NewInvoiceRequest {
  Invoice invoice = 1;
}

message NewInvoiceResponse {
  hestia.common.v1.Id id = 1;
}

message Invoice {
  DocumentHeader header = 1;
  repeated InvoiceLine lines = 2;
}

message GetInvoiceRequest {
  hestia.common.v1.Id id = 1;
}

message GetInvoiceResponse {
  Invoice invoice = 1;
}

message GetInvoicesRequest {
  hestia.common.v1.TimePagination pagination = 1;
}

message GetInvoicesResponse {
  hestia.common.v1.TimePagination pagination = 1 [features.field_presence = EXPLICIT];
  repeated DocumentHeader invoices = 2;
}

message Product {
  string id = 1 [features.field_presence = EXPLICIT];
  string code = 2 [features.field_presence = EXPLICIT];
  string name = 3;
  string description = 4 [features.field_presence = EXPLICIT];
  google.type.Money price = 5;
  Units unit = 6;
  int64 stock = 7;
  string created = 8 [features.field_presence = EXPLICIT];
  string updated = 9 [features.field_presence = EXPLICIT];
}

message InvoiceLine {
  Product product = 1;
  google.type.Decimal quantity = 2;
  google.type.Decimal discount = 3;
  // User must choose between vat_rate and vat_exemption_rate
  hestia.accounting.v1.VatRate vat_rate = 4 [features.field_presence = EXPLICIT];
  hestia.accounting.v1.VatExemption vat_exemption = 5 [features.field_presence = EXPLICIT];
  google.type.Money net_total = 6;
  google.type.Money gross_total = 7;
}

message Client {
  string id = 1 [features.field_presence = EXPLICIT];
  string name = 2;
  string code = 3;
  string commercial_name = 4 [features.field_presence = EXPLICIT];
  string vat_number = 5;
  Address address = 6 [features.field_presence = EXPLICIT];
}

message GetClientRequest {
  oneof client {
    hestia.common.v1.Id id = 1;
    string code = 2;
    string vat_id = 3;
  }
}

message GetClientResponse {
  Client client = 1;
}

message GetClientsRequest {
  hestia.common.v1.TimePagination pagination = 1 [features.field_presence = EXPLICIT];
}

message GetClientsResponse {
  repeated Client clients = 1;
}

message SearchClientsRequest {
  string query = 1;
}

message SearchClientsResponse {
  repeated Client clients = 1;
}
